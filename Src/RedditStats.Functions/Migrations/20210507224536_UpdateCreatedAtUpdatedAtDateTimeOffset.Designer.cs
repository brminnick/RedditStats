// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedditStats.Functions;

namespace RedditStats.Functions.Migrations
{
    [DbContext(typeof(AdvocateStatisticsDbContext))]
    [Migration("20210507224536_UpdateCreatedAtUpdatedAtDateTimeOffset")]
    partial class UpdateCreatedAtUpdatedAtDateTimeOffset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RedditStats.Common.RedditSubmission", b =>
                {
                    b.Property<string>("RedditUri")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommentCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DownVotes")
                        .HasColumnType("int");

                    b.Property<bool>("IsAwarded")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("SubmittedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Subreddit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UpVoteRatio")
                        .HasColumnType("float");

                    b.Property<int>("UpVotes")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset");

                    b.HasKey("RedditUri");

                    b.ToTable("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
